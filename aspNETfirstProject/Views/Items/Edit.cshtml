@model aspNETfirstProject.Models.Item

<style type="text/css">
    textarea {
        width: 100%;
        height: 100px;
        max-width: 100%;
    }
</style>

@{
    ViewBag.Title = "Edit Item";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Items", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ItemType, new { id = ViewBag.ItemType })
        @Html.HiddenFor(model => model.UserID) @*Doesn't matter who edited post, author remains same*@
        @Html.HiddenFor(model => model.Created_at)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.ImagePath != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Description,"Current Image",  htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <img src="~/Images/@(Model.ImagePath)" alt="pic" class="img-rounded">
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath,"Upload Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @type = "file", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.DocumentPath != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.DocumentPath,"Current Document", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <a class="btn btn-primary" href="~/Documents/@(Model.DocumentPath)"
                       role="button">
                        <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                        @Model.DocumentPath.Substring(15)
                    </a>
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.DocumentPath, "Upload Document", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="DocumentPath" />
                @*@Html.EditorFor(model => model.DocumentPath, new { htmlAttributes = new { @type = "file", @class = "form-control" } })
                *@
                @Html.ValidationMessageFor(model => model.DocumentPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
