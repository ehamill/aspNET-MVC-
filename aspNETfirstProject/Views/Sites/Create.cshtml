@model aspNETfirstProject.ViewModels.CreateSiteViewModel

<style type="text/css">
    .float-left {
        float: left;
    }
    #HiddenMessage {
    color:red;
    font-size:large;
    padding-bottom: 10px;
    text-align: center;
    
    }
</style>

@{
    ViewBag.Title = "Create";
}

<h2>Create New Site</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.CustomerID, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CustomerID, Model.Customers, "-- Select A Customer --")
                @Html.ValidationMessageFor(m => m.CustomerID, "", new { @class = "text-danger" })
                <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#myModal"> Add New Customer </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SiteType", new SelectList(string.Empty, "Value", "Text"), "Select a Site Type...", new {@id="SiteTypeID",Name= "SiteTypeID" })
                @Html.ValidationMessageFor(model => model.SiteTypes, "", new { @class = "text-danger" })
                <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#SiteTypeModal"> Add New Site Type </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SiteNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" onblur="CheckSiteNumber(this.value)" id="SiteNumber" name="SiteNumber" class="form-control" placeholder="Enter Site Number" />
                <span id="HiddenSiteNumberMessage"></span>
                @Html.ValidationMessageFor(model => model.SiteNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, "Country", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select required name="CountryID" id="CountryDD" onchange="LoadStates(this.value)">
                    <option value="">-- Choose a Country --</option>
                    @foreach (var Country in Model.Countries)
                    {
                        <option value="@Country.Value">  @Country.Text </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" }) &nbsp; &nbsp;
                <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#CountryModal"> Add Country </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StateID, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("States", new SelectList(string.Empty, "Value", "Text"), "-- Select a State --", new { id="StateID", Name = "StateID" })
                @Html.ValidationMessageFor(model => model.States, "", new { @class = "text-danger" })
                <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#StateModal"> Add State </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
} 



        <!-- Add Customer Modal -->
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #2e6da4; color: white">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title text-center">Add New Customer...Full Page Reload</h4>
                    </div>
                    <div class="modal-body text-centers">
                        @using (Html.BeginForm("AddCustomer", "Sites"))
                            {<div class="form-horizontal">
                                @Html.AntiForgeryToken()
                                <div class="form-groupl">
                                    <div id="HiddenCustomerMessage"></div>
                                    <label class="col-md-4" style="text-align:right">
                                        Customer:
                                    </label>
                                    <input class="col-md-8" style="margin-bottom:10px;" type="text" id="Name" name="Name" required placeholder="Enter Customer Name..." />

                                    <br />
                                    <label class="col-md-4" style="text-align:right"> Billing Address:</label>
                                    <input type="text" class="col-md-7" autocomplete="off" name="BillingAddress" required placeholder="Enter Address.." />
                                    <br />

                                </div>
                                <br><br>

                                <div class="form-group">
                                    <div class="col-md-offset-4 col-md-8">
                                        <input type="submit" value="Add" class="btn btn-success" />
                                    </div>
                                </div>
                            </div>
                        } <!-- End form -->
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add SiteType Modal -->
        <div id="SiteTypeModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #2e6da4; color: white">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title text-center">Add New Site Type...ajax</h4>
                    </div>
                    <div class="modal-body text-centers">
                        <div class="form-horizontal">
                            <div class="form-group" >
                                <div id="HiddenSiteTypeMessage"></div>
                                <label class="col-md-4" style="text-align:right">
                                    Customer:
                                </label>
                                @Html.DropDownListFor(m => m.CustomerID, Model.Customers, "-- Select A Customer --", new { @id = "SiteTypeCustomerID" } )
                            </div>
                            <div class="form-group">
                                <label class="col-md-4" style="text-align:right">Site Type:</label>
                                <input type="text" class="col-md-8"  id="SiteTypeName" required placeholder="Enter Site Type.." />
                                <br />
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-8">
                                    <button onclick="SubmitSiteType()" class="btn btn-success"> Submit </button>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Country Modal -->
        <div id="CountryModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #2e6da4; color: white">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title text-center">Add Country</h4>
                    </div>
                    <div class="modal-body text-centers">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div id="HiddenCountryMessage"></div>
                                <label class="col-md-4" style="text-align:right">Country Name:</label>
                                <input type="text" class="col-md-8" autocomplete="off" id="CountryName" required placeholder="Enter Name.." />
                            </div>
                            <div class="form-group">
                                <label class="col-md-4" style="text-align:right">Abbreviation:</label>
                                <input type="text" class="col-md-8" autocomplete="off" id="CountryAbbreviation" required placeholder="Enter Abbreviation.." />
                                <br />
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-8">
                                    <button onclick="SubmitCountry()" class="btn btn-success"> Submit </button>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add State Modal -->
        <div id="StateModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #2e6da4; color: white">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title text-center">Add State</h4>
                    </div>
                    <div class="modal-body text-centers">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <div id="HiddenAddStateMessage"></div>
                                <label class="col-md-4" style="text-align:right">Country:</label>
                                <select  name="AddStateCountryID" id="AddStateCountryID" class="col-md-8">
                                    <option value="">-- Choose a Country --</option>
                                    @foreach (var Country in Model.Countries)
                                    {
                                        <option value="@Country.Value">  @Country.Text </option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <div id="HiddenAddStateMessage"></div>
                                <label class="col-md-4" style="text-align:right">State Name:</label>
                                <input required type="text" class="col-md-8" onblur="CheckNewStateName(this.value)" id="NewStateName" />
                            </div>
                            <div class="form-group">
                                <label class="col-md-4" style="text-align:right">Abbreviation:</label>
                                <input required type="text" class="col-md-8"  id="StateAbbreviation" />
                                <br />
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-8">
                                    <button onclick="SubmitState()" class="btn btn-success"> Submit </button>
                                </div>
                            </div>

                            </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>



    </div>
 

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}


<script type="text/javascript">

    $(document).ready(function () {

        $("#CustomerID").change(function () {
            LoadSiteTypes(); 
        });
        $("#Country").change(function () {
            LoadStates();
        });
    });


    function LoadSiteTypes() {
        $("#SiteTypeID").empty(); 
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetSiteTypes")', 
            dataType: 'json',
            data: { CustomerID: $("#CustomerID").val() },
            success: function (SiteTypes) {
                $.each(SiteTypes, function (i, SiteType) {
                    $("#SiteTypeID").append('<option value="' + SiteType.Value + '">' +
                            SiteType.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve SiteTypes' + ex);
            }
        });
        return false;
    }


    function SubmitSiteType() {
        var CustomerID = $("#SiteTypeCustomerID").val(); 
        var Name = $("#SiteTypeName").val();
        var token = $('input[name="__RequestVerificationToken"]').val();
        document.getElementById("HiddenSiteTypeMessage").innerHTML = "";
        if (Name == "" || CustomerID == "") {
            document.getElementById("HiddenSiteTypeMessage").style.color = "red";
            document.getElementById("HiddenSiteTypeMessage").innerHTML = "Must Select Customer and SiteType!";
            } else {
            $.ajax({
                method: "POST",
                url: "AddSiteType",
                data: {
                    CustomerID: CustomerID, Name: Name, __RequestVerificationToken: token
                },
                dataType: "json", 
                success: function (data) {
                    if (data.success) {
                        $("#HiddenSiteTypeMessage").html(data.responseText);
                        $("#SiteTypeModal").modal('hide');
                    } else {
                        $("#HiddenSiteTypeMessage").html(data.responseText);
                    }
                },
                error: function (data) {
                    $("#HiddenSiteTypeMessage").html(data);
                }
            });
        }
    }

   
    function CheckSiteNumber(SiteNumber) {
        var CustomerID = $("#CustomerID").val(); 
        $("#HiddenSiteNumberMessage").html("");
        if (CustomerID == "" ||  SiteNumber == "") {
            $("#HiddenSiteNumberMessage").html("<b style='color:red'>Must Select Customer and SiteNumber!</b>");
        } else {
            $.ajax({
                method: "POST",
                url: "ValidateSiteNumber",
                data: {
                    CustomerID: CustomerID, SiteNumber: SiteNumber,
                },
                dataType: "json",  
                success: function (data) {
                    if (data.success) {
                        $("#HiddenSiteNumberMessage").html(data.responseText);
                        document.getElementById("HiddenSiteNumberMessage").style.color = "green";
                    } else {
                        $("#HiddenSiteNumberMessage").html(data.responseText);
                        document.getElementById("HiddenSiteNumberMessage").style.color = "red";
                    }
                },
                error: function () {
                    alert('failed site number check');
                    $("#hiddenSiteNumberError").show();
                    var html = '<span style="background-color: yellow" class="text-danger">Error!';
                    document.getElementById("hiddenSiteNumberError").innerHTML = html;
                }
            });
        }
    }

    function AddCustomer() {
        var Name = $("#Name").val();
        var Abbreviation = $("#BillingAddress").val();
        var token = $('input[name="__RequestVerificationToken"]').val();
        document.getElementById("HiddenCustomerMessage").innerHTML = "";
        if (Name == "" || BillingAddress == "") {
            document.getElementById("HiddenCustomerMessage").style.color = "red";
            document.getElementById("HiddenCustomerMessage").innerHTML = "Must Input Customer Name AND Billing Address!";
        } else {
            $.ajax({
                method: "POST",
                url: "AddCustomer",
                data: {
                    Name: Name, BillingAddress: BillingAddress, __RequestVerificationToken: token
                },
                dataType: "json",   
                success: function (data) {
                    if (data.success) {
                        $("#HiddenCustomerMessage").html(data.responseText);
                        document.getElementById("HiddenCustomerMessage").style.color = "green";
                        $('#myModal').modal('hide');
                    } else {
                        $("#HiddenCustomerMessage").html(data.responseText);
                        document.getElementById("HiddenCustomerMessage").style.color = "red";
                    }
                    document.getElementById("Name").value = ""; //Clear input text box
                    document.getElementById("BillingAddress").value = "";
                },
                error: function (data) {
                    $("#HiddenCountryMessage").html(data);
                }
            });
        }
    }


    function SubmitCountry() {
        var Name = $("#CountryName").val();
        var Abbreviation = $("#CountryAbbreviation").val();
        var token = $('input[name="__RequestVerificationToken"]').val();
        document.getElementById("HiddenCountryMessage").innerHTML = "";
        if (Name == "" || Abbreviation == "") {
            document.getElementById("HiddenCountryMessage").style.color = "red";
            document.getElementById("HiddenCountryMessage").innerHTML = "Must Input Country Name AND Abbreviation!";
        } else {
            $.ajax({
                method: "POST",
                url: "AddCountry",
                data: {
                    Name: Name, Abbreviation: Abbreviation, __RequestVerificationToken: token
                },
                dataType: "json", 
                success: function (data) {
                    if (data.success) {
                        $("#HiddenCountryMessage").html(data.responseText);
                        document.getElementById("HiddenCountryMessage").style.color = "green";
                        $("#CountryModal").modal('hide'); 
                    } else {
                        $("#HiddenCountryMessage").html(data.responseText);
                        document.getElementById("HiddenCountryMessage").style.color = "red";
                    }
                    document.getElementById("CountryName").value = ""; 
                    document.getElementById("CountryAbbreviation").value = "";
                    LoadCountries();
                },
                error: function (data) {
                    $("#HiddenCountryMessage").html(data);
                }
            });
        }
    }

    
    function LoadCountries() {
        $("#CountryDD").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCountries")',
            dataType: 'json',
            data: {},
            success: function (Countries) {
                $.each(Countries, function (i, Country) {
                    $("#CountryDD").append('<option value="' + Country.Value + '">' +
                            Country.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Countries ' + ex);
            }
        });
        return false;
    }


    function CheckNewStateName(NewStateName) {
        var CountryID = $("#AddStateCountryID").val();
        var Name = $("#NewStateName").val();
        var Abbreviation = $("#StateAbbreviation").val();
        $("#HiddenAddStateMessage").html("");
        if (CountryID == "" || NewStateName == "") {
            $("#HiddenAddStateMessage").html("<b style='color:red'>Must Select Country and enter state!</b>");
        } else {
            $.ajax({
                method: "POST",
                url: "VerifyNewStateName",
                data: {
                    CountryID: CountryID, Name: Name, Abbreviation: Abbreviation
                },
                dataType: "json",   
                success: function (data) {
                    if (data.success) {
                        $("#HiddenAddStateMessage").html("Site is unique.");
                        document.getElementById("HiddenAddStateMessage").style.color = "green";
                    } else {
                        $("#HiddenAddStateMessage").html(data.responseText);
                        document.getElementById("HiddenAddStateMessage").style.color = "red";
                    }
                },
                error: function (data) {
                    alert('Failed State NAME check');
                    $("#HiddenAddStateMessage").show();
                    $("#HiddenAddStateMessage").html(data.responseText);
                }
            });
        }
    }


    function SubmitState() {
        var CountryID = $("#AddStateCountryID").val();
        var Name = $("#NewStateName").val();
        var Abbreviation = $("#StateAbbreviation").val();
        document.getElementById("HiddenAddStateMessage").innerHTML = "";

        if (Name == ""  || Abbreviation == "") {
            document.getElementById("HiddenAddStateMessage").style.color = "red";
            document.getElementById("HiddenAddStateMessage").innerHTML = "Must Enter Country, State Name, AND Abbreviation!";
        } else {
            $.ajax({
                method: "POST",
                url: "AddState",
                data: {
                    CountryID: CountryID, Name: Name, Abbreviation: Abbreviation,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                dataType: "json", 
                success: function (data) {
                    if (data.success) {
                        $("#StateModal").modal('hide'); 
                    } else {
                        $("#HiddenAddStateMessage").html(data.responseText);
                        document.getElementById("HiddenAddStateMessage").style.color = "red";
                    }
                    document.getElementById("NewStateName").value = ""; 
                    document.getElementById("StateAbbreviation").value = "";
                    LoadStates();
                },
                error: function (data) {
                    $("#HiddenAddStateMessage").html("Cannot add new State at this time. Please contact support.");
                }
            });
        }
    }

    function LoadStates() {
        $("#StateID").empty();
        var CountryID = $("#CountryDD").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetStates")', 
            dataType: 'json',
            data: { CountryID },
            success: function (States) {
                $.each(States, function (i, State) {
                    $("#StateID").append('<option value="' + State.Value + '">' +
                            State.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve States ' + ex);
            }
        });
        return false;
    }


    function loadCities($stateID) {
        $("#addNewCityLink").show();
        var countryID = $("#countryDD").val();
        var stateID = $stateID;
        $.ajax({
            method: "POST",
            url: "load_cities",
            data: {
                _token: "{{ csrf_token() }}",   
                countryID: countryID, stateID: stateID,
            },
            dataType: "html",  
            success: function (data) {
                $("#hiddenCities").html(data);
            },
            error: function () {
                alert('failed to load cities');
            }
        });
    }


</script>
